import{_ as s,o as a,c as n,a as l}from"./app.ef29b3a4.js";const h=JSON.parse('{"title":"API","description":"","frontmatter":{},"headers":[{"level":2,"title":"GET API","slug":"get-api","link":"#get-api","children":[]},{"level":2,"title":"POST API","slug":"post-api","link":"#post-api","children":[]},{"level":2,"title":"Methods and Parameters","slug":"methods-and-parameters","link":"#methods-and-parameters","children":[]}],"relativePath":"essentials/api.md"}'),t={name:"essentials/api.md"},e=l(`<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-hidden="true">#</a></h1><p>Your application will start as an isolated project but eventually, it will have to communicate to other systems in your eco-system. This is where APIs come into play, they allow you to create HTTP endpoints that can handle the request made by external services.</p><h2 id="get-api" tabindex="-1">GET API <a class="header-anchor" href="#get-api" aria-hidden="true">#</a></h2><p>Lets create a HTTP API that returns will return all the users in the system.</p><p>Create a new file <code>/api/ExportUsers.controller.ts</code></p><div class="danger custom-block"><p class="custom-block-title">IMPORTANT</p><p>The file must be placed in the <code>/api</code> folder and end with <code>.controller.ts.</code></p></div><p>Add the following content to the file:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">BaseController</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">HttpResponse</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;oksy&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ExportUsersController</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BaseController</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">URL</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;/v1/users&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">GET</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">users</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reactiveStore</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getAll</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;User&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">map</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">user</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">			</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">u</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">u</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">				</span><span style="color:#9CDCFE;">email:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">u</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">email</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">			};</span></span>
<span class="line"><span style="color:#D4D4D4;">		});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">HttpResponse</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">users</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>This API will be hosted at <code>localhost:8000<b>/api/v1/users</b></code> and will return all the users.</p><h2 id="post-api" tabindex="-1">POST API <a class="header-anchor" href="#post-api" aria-hidden="true">#</a></h2><p>Lets create an API endpoint that handles a POST request and creates a new <code>Product</code> in our database.</p><p>Create a new file <code>/api/ProductCreate.controller.ts</code> with the following contents:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">BaseController</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">HttpResponse</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;oksy&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ProductCreateController</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BaseController</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">URL</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;/v1/products/:workspaceId/new&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">	</span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">POST</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;"> }) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">workspace</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">reactiveStore</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Workspace&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">url</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">query</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">workspaceId</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">workspace</span><span style="color:#D4D4D4;"> === </span><span style="color:#569CD6;">null</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">HttpResponse</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">404</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">product</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">workspace</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Product&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">product</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">product</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">price</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">parseFloat</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">json</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">price</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">		</span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">HttpResponse</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">201</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">product</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="methods-and-parameters" tabindex="-1">Methods and Parameters <a class="header-anchor" href="#methods-and-parameters" aria-hidden="true">#</a></h2><p>You notice that the <code>POST</code> method has 2 parameters <code>json</code> and <code>query</code>, they contain extra information about the request. Here is a list of all the methods with their parameters:</p><table><tr><td><b>Parameter</b></td><td><b>Type</b></td></tr><tr><td><code>method</code></td><td><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#CE9178;">&#39;GET&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;POST&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;PUT&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;PATCH&#39;</span><span style="color:#D4D4D4;"> | </span><span style="color:#CE9178;">&#39;DELETE&#39;</span></span>
<span class="line"></span></code></pre></div></td></tr><tr><td><code>url</code></td><td><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#D4D4D4;">{ </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">query</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">Record</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">&gt;,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">fullUrl</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div></td></tr><tr><td><code>json</code></td><td><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;"> | </span><span style="color:#9CDCFE;">any</span></span>
<span class="line"></span></code></pre></div></td></tr><tr><td><code>body</code></td><td><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#569CD6;">undefined</span><span style="color:#D4D4D4;"> | </span><span style="color:#9CDCFE;">string</span></span>
<span class="line"></span></code></pre></div></td></tr></table><table><thead><tr><th>Parameter</th><th style="text-align:center;"><code>method</code></th><th style="text-align:center;"><code>url</code></th><th style="text-align:center;"><code>json</code></th><th style="text-align:center;"><code>body</code></th></tr></thead><tbody><tr><td><code>ALL</code></td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td></tr><tr><td><code>GET</code></td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F534}</td></tr><tr><td><code>POST</code></td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td></tr><tr><td><code>PUT</code></td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td></tr><tr><td><code>PATCH</code></td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td></tr><tr><td><code>DELETE</code></td><td style="text-align:center;">\u{1F534}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td><td style="text-align:center;">\u{1F7E2}</td></tr></tbody></table>`,17),p=[e];function o(c,D,r,y,d,i){return a(),n("div",null,p)}const u=s(t,[["render",o]]);export{h as __pageData,u as default};
