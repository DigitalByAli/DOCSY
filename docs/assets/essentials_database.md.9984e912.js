import{_ as s,o as a,c as n,a as e}from"./app.055c086e.js";const h=JSON.parse('{"title":"Database","description":"","frontmatter":{},"headers":[{"level":2,"title":"Accessing the database object","slug":"accessing-the-database-object","link":"#accessing-the-database-object","children":[]},{"level":2,"title":"Creating a model","slug":"creating-a-model","link":"#creating-a-model","children":[]},{"level":2,"title":"Retrieving models","slug":"retrieving-models","link":"#retrieving-models","children":[]},{"level":2,"title":"Sorting","slug":"sorting","link":"#sorting","children":[{"level":3,"title":"Example - DataTable newest first","slug":"example-datatable-newest-first","link":"#example-datatable-newest-first","children":[]}]}],"relativePath":"essentials/database.md"}'),l={name:"essentials/database.md"},o=e(`<h1 id="database" tabindex="-1">Database <a class="header-anchor" href="#database" aria-hidden="true">#</a></h1><p>The database class is only available through page classes (<em>through <code>this.database</code></em>) and is responsible for creating and deleting models.</p><h2 id="accessing-the-database-object" tabindex="-1">Accessing the database object <a class="header-anchor" href="#accessing-the-database-object" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki has-highlighted-lines"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">BasePage</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;oksy&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ExamplePage</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">BasePage</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">static</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">URL</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;/&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">view</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">customer</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="creating-a-model" tabindex="-1">Creating a model <a class="header-anchor" href="#creating-a-model" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">customer</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">customer</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;Kevin&#39;</span><span style="color:#D4D4D4;"> </span><span style="color:#6A9955;">// automaticly synced in the UI and database</span></span>
<span class="line"></span></code></pre></div><h2 id="retrieving-models" tabindex="-1">Retrieving models <a class="header-anchor" href="#retrieving-models" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki"><code><span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;1&#39;</span><span style="color:#D4D4D4;">);     </span><span style="color:#6A9955;">// get customer with id 1</span></span>
<span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getAll</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">);           </span><span style="color:#6A9955;">// get all valid customers</span></span>
<span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getAllWithDraft</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">);  </span><span style="color:#6A9955;">// get all customers</span></span>
<span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">delete</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">customerPeter</span><span style="color:#D4D4D4;">);        </span><span style="color:#6A9955;">// delete customerPeter</span></span>
<span class="line"></span></code></pre></div><h2 id="sorting" tabindex="-1">Sorting <a class="header-anchor" href="#sorting" aria-hidden="true">#</a></h2><p>The <code>sort</code> helper takes care of sorting an array of <code>Entity</code> objects. Because, this can be a bit cumbersome to handle <code>number</code>, <code>string</code>, <code>boolean</code> and <code>Dayjs</code> properties.</p><h3 id="example-datatable-newest-first" tabindex="-1">Example - DataTable newest first <a class="header-anchor" href="#example-datatable-newest-first" aria-hidden="true">#</a></h3><p>We want to sort the <a href="/DOCSY/ui/data-table.html">DataTable</a> with the newest record first. We can do that with the following code:</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki has-highlighted-lines"><code><span class="line highlighted"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">sort</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;oksy&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#4FC1FF;">UI</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">DataTable</span><span style="color:#D4D4D4;">({</span></span>
<span class="line highlighted"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">data</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">sort</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">database</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getAllWithDraft</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Customer&#39;</span><span style="color:#D4D4D4;">), </span><span style="color:#CE9178;">&#39;createdAt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;DESC&#39;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre></div>`,13),t=[o];function p(c,r,D,i,y,d){return a(),n("div",null,t)}const g=s(l,[["render",p]]);export{h as __pageData,g as default};
